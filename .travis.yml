language: c++
cache: ccache

os:
  - osx

compiler:
  - clang

install:
  - git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
  - export PATH=`pwd`/depot_tools:"$PATH"
  - fetch --no-history v8
  - cd v8
  - gclient sync
  - tools/dev/v8gen.py x64.release
  - echo "is_component_build = false" >> out.gn/x64.release/args.gn 
  - echo "v8_static_library = true" >> out.gn/x64.release/args.gn 
  - ninja -C out.gn/x64.release/ v8_headers
  - ninja -C out.gn/x64.release/ v8_libbase
  - ninja -C out.gn/x64.release/ v8_libsampler
  - ninja -C out.gn/x64.release/ icu
  - ninja -C out.gn/x64.release/ v8_libplatform
  - ninja -C out.gn/x64.release/ v8_base
  - ninja -C out.gn/x64.release/ v8_external_snapshot
  - ninja -C out.gn/x64.release/ v8_hello_world
  
script: 
  - cd ..
  - mkdir build
  - mkdir build/libs
  - cp v8/out.gn/x64.release/obj/*.a build/libs
  - cp v8/out.gn/x64.release/*.a build/libs
  - cp v8/out.gn/x64.release/third_party/icu/*.a builds/libs
  - cp v8/out.gn/x64.release/icudtl.dat builds
  - cp v8/out.gn/x64.release/snapshot_blob.bin builds/
  - cp v8/out.gn/x64.release/natives_blob.bin builds/
  - cp v8/out.gn/x64.release/v8_hello_world builds/
  - mkdir build/include  
  - cp -R v8/include build/include

deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  bucket: v8-build
  skip_cleanup: true
  local_dir: build
  region: us-east-2

#after_success: LD_LIBRARY_PATH=. ./v8pp_test -v --run-tests test/console.js test/file.js